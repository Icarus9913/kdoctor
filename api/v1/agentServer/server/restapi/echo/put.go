// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 Authors of kdoctor-io
// SPDX-License-Identifier: Apache-2.0

package echo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PutHandlerFunc turns a function with the right signature into a put handler
type PutHandlerFunc func(PutParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PutHandlerFunc) Handle(params PutParams) middleware.Responder {
	return fn(params)
}

// PutHandler interface for that can handle valid put params
type PutHandler interface {
	Handle(PutParams) middleware.Responder
}

// NewPut creates a new http.Handler for the put operation
func NewPut(ctx *middleware.Context, handler PutHandler) *Put {
	return &Put{Context: ctx, Handler: handler}
}

/*
	Put swagger:route PUT / echo put

echo http request

echo http request
*/
type Put struct {
	Context *middleware.Context
	Handler PutHandler
}

func (o *Put) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPutParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
