// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 Authors of kdoctor-io
// SPDX-License-Identifier: Apache-2.0

package echo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteKdoctoragentHandlerFunc turns a function with the right signature into a delete kdoctoragent handler
type DeleteKdoctoragentHandlerFunc func(DeleteKdoctoragentParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteKdoctoragentHandlerFunc) Handle(params DeleteKdoctoragentParams) middleware.Responder {
	return fn(params)
}

// DeleteKdoctoragentHandler interface for that can handle valid delete kdoctoragent params
type DeleteKdoctoragentHandler interface {
	Handle(DeleteKdoctoragentParams) middleware.Responder
}

// NewDeleteKdoctoragent creates a new http.Handler for the delete kdoctoragent operation
func NewDeleteKdoctoragent(ctx *middleware.Context, handler DeleteKdoctoragentHandler) *DeleteKdoctoragent {
	return &DeleteKdoctoragent{Context: ctx, Handler: handler}
}

/*
	DeleteKdoctoragent swagger:route DELETE /kdoctoragent echo deleteKdoctoragent

clean http request counts

clean http request counts
*/
type DeleteKdoctoragent struct {
	Context *middleware.Context
	Handler DeleteKdoctoragentHandler
}

func (o *DeleteKdoctoragent) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteKdoctoragentParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
