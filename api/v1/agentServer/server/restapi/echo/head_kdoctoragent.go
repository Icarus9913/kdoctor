// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 Authors of kdoctor-io
// SPDX-License-Identifier: Apache-2.0

package echo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// HeadKdoctoragentHandlerFunc turns a function with the right signature into a head kdoctoragent handler
type HeadKdoctoragentHandlerFunc func(HeadKdoctoragentParams) middleware.Responder

// Handle executing the request and returning a response
func (fn HeadKdoctoragentHandlerFunc) Handle(params HeadKdoctoragentParams) middleware.Responder {
	return fn(params)
}

// HeadKdoctoragentHandler interface for that can handle valid head kdoctoragent params
type HeadKdoctoragentHandler interface {
	Handle(HeadKdoctoragentParams) middleware.Responder
}

// NewHeadKdoctoragent creates a new http.Handler for the head kdoctoragent operation
func NewHeadKdoctoragent(ctx *middleware.Context, handler HeadKdoctoragentHandler) *HeadKdoctoragent {
	return &HeadKdoctoragent{Context: ctx, Handler: handler}
}

/*
	HeadKdoctoragent swagger:route HEAD /kdoctoragent echo headKdoctoragent

echo http request

echo http request
*/
type HeadKdoctoragent struct {
	Context *middleware.Context
	Handler HeadKdoctoragentHandler
}

func (o *HeadKdoctoragent) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewHeadKdoctoragentParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
